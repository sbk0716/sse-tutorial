/**
 * アプリケーションのルートレイアウトコンポーネント
 *
 * このファイルは、アプリケーション全体のレイアウトを定義します。
 * Next.jsのレイアウトシステムを使用して、すべてのページに共通する
 * 構造、スタイル、コンポーネントを提供します。
 *
 * SSEアプリケーションでは、共通のレイアウト内でSSE接続を管理することで、
 * ページ間のナビゲーション時にもSSE接続を維持することができます。
 * これにより、ユーザーがアプリケーション内を移動しても、リアルタイム更新が
 * 途切れることなく継続されます。
 */

import type { Metadata } from "next";
// Next.jsのメタデータ型をインポート
// ページのタイトルや説明などのメタデータを定義するために使用

import { Geist, Geist_Mono } from "next/font/google";
// Next.jsのフォント最適化機能を使用してGeistフォントをインポート
// Geist: サンセリフフォント（通常のテキスト用）
// Geist_Mono: 等幅フォント（コード表示用）

import "./globals.css";
// グローバルCSSをインポート
// アプリケーション全体に適用されるスタイルを定義

import { Providers } from "./providers";
// プロバイダーコンポーネントをインポート
// テーマプロバイダーなど、アプリケーション全体で使用される
// コンテキストプロバイダーを提供

import NavBar from "./components/NavBar";
// ナビゲーションバーコンポーネントをインポート
// すべてのページに表示されるナビゲーションバー

/**
 * Geistサンセリフフォントの設定
 *
 * 通常のテキスト表示に使用されるフォントを設定します。
 * CSSカスタムプロパティとして使用できるようにします。
 */
const geistSans = Geist({
  variable: "--font-geist-sans", // CSSカスタムプロパティ名
  subsets: ["latin"], // 使用する文字セット（ラテン文字）
});

/**
 * Geist等幅フォントの設定
 *
 * コードブロックやプログラミング関連のテキスト表示に使用される
 * 等幅フォントを設定します。
 */
const geistMono = Geist_Mono({
  variable: "--font-geist-mono", // CSSカスタムプロパティ名
  subsets: ["latin"], // 使用する文字セット（ラテン文字）
});

/**
 * アプリケーションのメタデータ
 *
 * ページのデフォルトタイトルと説明を定義します。
 * これらの情報は、ブラウザのタブやSEOに使用されます。
 */
export const metadata: Metadata = {
  title: "Create Next App", // ブラウザのタブに表示されるタイトル
  description: "Generated by create next app", // SEO用の説明文
};

/**
 * ルートレイアウトコンポーネント
 *
 * アプリケーション全体のレイアウト構造を定義します。
 * すべてのページはこのレイアウト内にレンダリングされます。
 *
 * @param children - レイアウト内に表示される子コンポーネント（各ページのコンテンツ）
 * @returns JSX.Element - アプリケーションのルートレイアウト
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ja" suppressHydrationWarning>
      {/*
        言語設定を日本語に
        suppressHydrationWarning: クライアントとサーバーの不一致警告を抑制
        （テーマ切り替えなどで必要）
      */}
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        // フォント変数をクラスとして適用
        // antialiased: フォントのアンチエイリアシングを適用（滑らかな表示）
      >
        <Providers>
          {/* テーマプロバイダーなどのコンテキストプロバイダーを適用 */}
          <div className="min-h-screen flex flex-col">
            {/* 最小高さを画面いっぱいに、縦方向のフレックスボックスとして配置 */}
            <NavBar />
            {/* 共通のナビゲーションバーを表示 */}
            <main className="flex-grow">
              {/* メインコンテンツ領域（フレックスボックスで残りのスペースを埋める） */}
              {children}
              {/* 各ページの実際のコンテンツをここに表示 */}
            </main>
          </div>
        </Providers>
      </body>
    </html>
  );
}
